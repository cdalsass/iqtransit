apply plugin: 'java'


repositories {
    mavenCentral()
}

dependencies {
    compile files('lib/socketio.jar','lib/junit.jar','lib/gson-2.3.1.jar', 'lib/jts-1.8.jar')
    testCompile files('lib/junit.jar','lib/junit.jar','lib/hamcrest-core-1.3.jar')
    compile group: 'com.google.protobuf',name:'protobuf-java', version:'2.6.0'
    compile group: 'mysql',name:'mysql-connector-java', version:'5.1.6'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.6'
    compile group: 'org.apache.httpcomponents', name: 'httpclient-cache', version: '4.3.6'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.3.6'
    compile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.3.6'
    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.1'
		compile files('/Users/cdalsass/experimental/0mq/jeromq/build/libs/jeromq-all.jar')
}

// create single jar 
// looks like i don't need any plugins here at all.  
task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task showMeCache << {
  configurations.compile.each { println it }
}

task genSources << {
     def proc = "rm -f src/main/java/com/iqtransit/gen/MBTAStaticPathData*; java -cp build/libs/iqtransit-all.jar com.iqtransit.codegen.staticShapesGenerator ./src/test/resources/config.properties".execute()
    proc.in.eachLine {line -> println line}
    proc.err.eachLine {line -> println 'ERROR: ' + line}
    proc.waitFor() 
}

compileJava.dependsOn(genSources)
